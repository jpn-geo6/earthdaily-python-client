
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/multisensors_cube.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_multisensors_cube.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_multisensors_cube.py:


Create a multisensor cube
=================================================================

With Sentinel-2 and Venus, using Sentinel-2 spatial resolutino for demo purpose

.. GENERATED FROM PYTHON SOURCE LINES 9-11

Import librairies
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: default


    from earthdaily import earthdatastore
    import geopandas as gpd
    from rasterio.enums import Resampling
    from matplotlib import pyplot as plt









.. GENERATED FROM PYTHON SOURCE LINES 19-21

Import librairies
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 21-32

.. code-block:: default


    eds = earthdatastore.Auth()
    polygon = gpd.read_file("pivot.geojson")
    # 500x500m
    polygon.geometry = (
        polygon.geometry.to_crs(epsg=3857).centroid.buffer(500).to_crs(epsg=4326)
    )

    datetime = ["2019-08"]









.. GENERATED FROM PYTHON SOURCE LINES 33-35

Generate s2 cube
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 35-45

.. code-block:: default



    s2 = eds.datacube(
        "sentinel-2-l2a",
        intersects=polygon,
        datetime=datetime,
        assets=["blue", "green", "red", "nir"],
        prefer_http=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 46-48

Generate venus cube
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 48-69

.. code-block:: default


    venus_assets = dict(
        image_file_SRE_B3="blue",
        image_file_SRE_B4="green",
        image_file_SRE_B5="yellow",
        image_file_SRE_B7="red",
        image_file_SRE_B11="nir",
    )

    venus = eds.datacube(
        "venus-l2a",
        intersects=polygon,
        resolution=s2.rio.resolution()[0],
        datetime=datetime,
        epsg=s2.rio.crs.to_epsg(),
        resampling=Resampling.nearest,  # cubic
        assets=venus_assets,
        prefer_http=True,
    )









.. GENERATED FROM PYTHON SOURCE LINES 70-72

Create supercube
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: default


    print("create metacube")
    supercube = earthdatastore.metacube(s2, venus)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    create metacube




.. GENERATED FROM PYTHON SOURCE LINES 77-79

Get the first common date for plotting
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 79-86

.. code-block:: default


    common_date = [
        day
        for day in s2.time.dt.strftime("%Y%m%d").values
        if day in venus.time.dt.strftime("%Y%m%d").values
    ][0]








.. GENERATED FROM PYTHON SOURCE LINES 87-89

Plot sentinel-2
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 89-96

.. code-block:: default


    s2.sel(time=common_date)[["red", "green", "blue"]].to_array(dim="band").plot.imshow(
        vmin=0, vmax=0.15
    )
    plt.title(f"Sentinel-2 on {common_date}")
    plt.show()




.. image-sg:: /_auto_examples/images/sphx_glr_multisensors_cube_001.png
   :alt: Sentinel-2 on 20190808
   :srcset: /_auto_examples/images/sphx_glr_multisensors_cube_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 97-99

Plot venus
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 99-107

.. code-block:: default

    venus.sel(time=common_date, method="nearest")[["red", "green", "blue"]].to_array(
        dim="band"
    ).plot.imshow(vmin=0, vmax=0.15)
    plt.title(f"Venus on {common_date}")

    plt.show()
    #




.. image-sg:: /_auto_examples/images/sphx_glr_multisensors_cube_002.png
   :alt: Venus on 20190808
   :srcset: /_auto_examples/images/sphx_glr_multisensors_cube_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 108-110

Plot the fusion
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 110-117

.. code-block:: default


    supercube.sel(time=common_date)[["red", "green", "blue"]].to_array(
        dim="band"
    ).plot.imshow(vmin=0, vmax=0.15)
    plt.title(f"Fusion of Venus/Sentinel-2 on {common_date}")

    plt.show()



.. image-sg:: /_auto_examples/images/sphx_glr_multisensors_cube_003.png
   :alt: Fusion of Venus/Sentinel-2 on 20190808
   :srcset: /_auto_examples/images/sphx_glr_multisensors_cube_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 19.623 seconds)


.. _sphx_glr_download__auto_examples_multisensors_cube.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: multisensors_cube.py <multisensors_cube.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: multisensors_cube.ipynb <multisensors_cube.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
